#!/usr/bin/perl

use strict;
use Getopt::Long;
use Pod::Usage;
use App::HI;

our $VERSION = '2.7187';

Getopt::Long::Configure("bundling"); # make switches case sensitive (and turn on bundling)
GetOptions(
    "help|h"             => sub { pod2usage(-verbose=>2) },
    "trunc|t=i"          => \my $truncate, # whether to truncate the line
    "nixnics|noex|x"     => \my $no_extra, # don't use the color nicknames
    "list|list-colors|l" => sub { App::HI::list_colors(); exit 0 },
);

$truncate = $ENV{TRUNCATE} if exists $ENV{TRUNCATE};
$no_extra = $ENV{NO_EXTRA} if exists $ENV{NO_EXTRA};

App::HI::fire_filter($truncate, $no_extra);

=head1 NAME

hi - highlight things in a stream of output

=head1 SYNOPSIS

  hi [options] [regex color [regex color [regex color [...]]]]
      --list-colors --list -l: list the available colors and exit
      --nixnics --noex -x:     do not use the extended color nicknames
      --trunc -t:              truncate lines to this width (argument required)
      --help -h:               this help

=head1 EXAMPLES

  ps auxfw | hi jettero sky root red ^nobody orange

  sudo tail -f /var/log/vsftpd.log | hi CONNECT.* umber OK.UPLOAD.* lime

=head1 REPORTING BUGS

You can report bugs either via rt.cpan.org or via the issue tracking system on
github.  I'm likely to notice either fairly quickly.

=head1 AUTHOR

Paul Miller C<< <jettero@cpan.org> >>

=head1 COPYRIGHT

Copyright 2014 Paul Miller -- released under the GPL

=head1 SEE ALSO

perl(1), L<Term::ANSIColor>, L<Term::ANSIColorx::AutoFilterFH>, L<Term::ANSIColorx::ColorNicknames>
